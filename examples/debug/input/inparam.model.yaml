#
#  inparam.model.yaml
#  AxiSEM3D
#
#  Created by Kuangdai Leng on 8/31/19.
#  Copyright Â© 2019 Kuangdai Leng. All rights reserved.
#

#  This is an AxiSEM3D input parameter file for
#  1D and 3D models


############################# 1D model #############################
model1D:
    # what: Exodus mesh file created by salvus mesher
    # type: filename
    exodus_mesh: AxiSEM_prem_ani_150.e


############################# geodesy #############################
geodesy:
    # what: geographic location of the north pole in the mesh
    # type: array of double / SOURCE
    # note: 1) this reference location enables the usage of geographic
    #          coordinates for locating sources, receivers and 3D models,
    #          compatible with Cartesian models
    #       2) array of double: [latitude, longitude]
    #       3) SOURCE: automatically determined by the FIRST source
    #                  presented in list_of_sources in inparam.source.yaml;
    #                  always use SOURCE for a single-source simulation
    lat_lon_north_pole_mesh: SOURCE

    # what: flattening on the surface
    # type: string / double
    # only: SPHERE / WGS84 / GRS80 / SPECFEM3D_GLOBE / value
    # note: 1) ellipticity is ignored for Cartesian models
    #       2) 0 for a perfect sphere; ~0.0033 for the Earth
    #       3) ellipticity will be used in the transformation between
    #          the geographic and the geocentric co-latitudes;
    #          see eq. (14.32) in Dahlen & Tromp, 1998
    #       4) to actually deform the entire mesh, add the model
    #          "ellipticity" to list_of_3D_models
    flattening_on_surface: WGS84


######################## absorbing boundary ########################
absorbing_boundary:
    # what: model boundaries regarded as absorbing boundaries
    # type: array of string
    # only: NONE or a subset of [RIGHT, BOTTOM, TOP]
    # note: 1) an AxiSEM3D mesh may contain four outer boundaries:
    #          left (axial), right, bottom and top (surface); the right,
    #          bottom and top ones can be absorbing boundaries (the left
    #          or axial one is non-physical)
    #       2) use NONE or [] to disable absorbing boundary condition
    #          (so that all model boundaries will be stress-free)
    #       3) the most common case in seismology is [RIGHT, BOTTOM]
    boundaries: [RIGHT, BOTTOM, TOP]
    
    # what: enable the Clayton-Enquist approach
    # type: bool
    # note: the simplest linear approach by Clayton and Engquist (1977)
    enable_Clayton_Enquist: true
    
    # the sponge approach by Kosloff and Kosloff (1986)
    Kosloff_Kosloff:
        # what: enable the Kosloff-Kosloff approach
        # type: bool
        # note: Clayton-Enquist and Kosloff-Kosloff can be used together
        enable: true
        
        # what: relative spans of the sponge layers
        # type: array of double
        # note: 1) given in the same order as absorbing_boundaries
        #       2) absolute span = relative span * mesh span
        relative_spans: [.05, .05, .05]
        
        # what: U0's of the sponge layers
        # type: array of double
        # note: 1) given in the same order as absorbing_boundaries
        #       2) U0 is the attenuation strength at the outermost
        #          part of a sponge layer (on the model boundary);
        #          the strength at the innermost part is 0
        U0: [.1, .1, .1]


######################## attenuation ########################
# what: attenuation mode
# type: string
# only: NONE / FULL / CG4
# note: 1) NONE: turn off attenuation
#       2) FULL: compute attenuation on all GLL points
#       3) CG4:  compute attenuation on 4 GLL points per element;
#                CG4 is as accurate as FULL and much more efficient
#                than FULL, but requires set(NPOL 4) in CMakeLists.txt
attenuation: CG4


############################# 3D models #############################
# what: list of 3D models
# type: array of objects
# note: 1) the order in this list can affect the final 3D model
#       2) use NONE if no 3D model presents
list_of_3D_models:
    ##########################################
    # this key can be arbitrary
    - s362ani_emc:
        # activate
        activated: true
        # class name
        class_name: StructuredGridV3D
        # data file
        nc_data_file: S362ANI_percent.nc
        # coordinates
        coordinates:
            # use (latitude, longitude) or (distance, azimuth)
            latitude:
                # netcdf variable
                nc_var: latitude
                # rank in data (0, 1 or 2)
                data_rank: 1
                # correct co-latitude for ellipticity
                ellipticity: false
            # use (latitude, longitude) or (distance, azimuth)
            longitude:
                # netcdf variable
                nc_var: longitude
                # rank in data (0, 1 or 2)
                data_rank: 2
            # use radius or depth
            depth:
                # netcdf variable
                nc_var: depth
                # rank in data (0, 1 or 2)
                data_rank: 0
                # use solid surface as depth origin
                below_solid_surface: true
            # coordinate unit for angles
            angle_unit: degree
            # coordinate unit for lengths
            length_unit: km
            # use element center for scope check
            element_center_in_scope: false
        # properties
        properties:
            # property key
            # RHO, VP, VS, VPV, VPH, VSV, VSH, ETA, QMU, QKAPPA,
            # and the 21 Cij's (C11, C12, C13, ..., C56, C66)
            - VSV:
                # netcdf variable
                nc_var: dvsv
                # factor
                factor: .01
                # reference kind (ABS, REF1D, REF3D, or REF_PERTURB)
                reference_kind: REF1D
            - VSH:
                nc_var: dvsh
                factor: .01
                reference_kind: REF1D
            - VPV:
                nc_var: dvsv
                factor: .005
                reference_kind: REF1D
            - VPH:
                nc_var: dvsh
                factor: .005
                reference_kind: REF1D

    ##########################################
    # this key can be arbitrary
    - geo_emc:
        # activate
        activated: true
        # class name
        class_name: StructuredGridG3D
        # data file
        nc_data_file: S362ANI_percent.nc
        # coordinates
        coordinates:
            # use (latitude, longitude) or (distance, azimuth)
            latitude:
                # netcdf variable
                nc_var: latitude
                # rank in data (0 or 1)
                data_rank: 0
                # correct co-lat for ellipticity
                ellipticity: false
            # use (latitude, longitude) or (distance, azimuth)
            longitude:
                # netcdf variable
                nc_var: longitude
                # rank in data (0 or 1)
                data_rank: 1
            # use radius or depth
            depth:
                # depth of the undulated interface
                interface: 25
                # undulated range
                min_max: [0, 600]
                # use solid surface as depth origin
                below_solid_surface: true
            # coordinate unit for angles
            angle_unit: degree
            # coordinate unit for lengths
            length_unit: km
        # undulation data
        undulation_data:
            # netcdf variable
            nc_var: moho
            # factor
            factor: 1e3

    ##########################################
    # this key can be arbitrary
    - ocean_emc:
        # activate
        activated: true
        # class name
        class_name: StructuredGridO3D
        # data file
        nc_data_file: S362ANI_percent.nc
        # coordinates
        coordinates:
            # use (latitude, longitude) or (distance, azimuth)
            latitude:
                # netcdf variable
                nc_var: latitude
                # rank in data (0 or 1)
                data_rank: 0
                # correct co-lat for ellipticity
                ellipticity: true
            # use (latitude, longitude) or (distance, azimuth)
            longitude:
                # netcdf variable
                nc_var: longitude
                # rank in data (0 or 1)
                data_rank: 1
            # coordinate unit for angles
            angle_unit: degree
            # coordinate unit for lengths
            length_unit: km
        # ocean load data
        data_sum_rho_depth:
            # netcdf variable
            nc_var: ocean
            # factor
            factor: 1e3

    ##########################################
    # this key can be arbitrary
    - ellipticity:
        # activate
        activated: true
        # class name
        class_name: Ellipticity
