#
#  inparam.source.yaml
#  AxiSEM3D
#
#  Created by Kuangdai Leng on 5/15/20.
#  Copyright © 2020 Kuangdai Leng. All rights reserved.
#

#  This is an AxiSEM3D input parameter file for
#  time-axis and sources


############################# time axis #############################
time_axis:
    # what: record length (the end time in seismograms)
    # type: double
    # note: the start time depends on the source-time functions
    record_length: 1800.

    # what: user-specified Δt
    # type: string / double
    # only: NONE / value
    # note: use NONE to automatically determine Δt by mesh
    enforced_dt: NONE

    # what: Courant number for determining Δt by mesh
    # type: double
    # note: Δt increases with this number
    Courant_number: 0.6

    # what: time integrator
    # type: string
    # only: NEWMARK / SYMPLECTIC
    # note: 1) NEWMARK is faster while SYMPLECTIC is less dispersive
    #       2) use SYMPLECTIC for ultra-long simulations
    #       3) Courant_number can be increased to 1.0~1.2 for SYMPLECTIC
    integrator: NEWMARK


######################### sources #########################
# what: list of sources
# type: array of objects
list_of_sources:
    ##########################################
    # this key can be arbitrary
    - VIRGINIA_201108231751A:
        # source location
        location:
            # what: horizontal location
            # type: string / array of double
            # only: ON_AXIS / values
            # note: 1) the key can be "latitude_longitude" or "distance_azimuth"
            #       2) if key is "latitude_longitude", the unit is degree;
            #          if key is "distance_azimuth", the unit of distance is
            #          radian for a spherical mesh and meter for a Cartesian
            #          mesh, and the unit of azimuth is radian
            #       3) use ON_AXIS to place the source on the mesh axis
            latitude_longitude: [37.91, -77.93]
            # what: vertical location
            # type: double
            # note: the key can be "depth" or "radius" and the unit is meter
            depth: 12e3
        # source mechanism
        mechanism:
            # what: type of source mechanism
            # type: string
            # only: MOMENT_TENSOR, FORCE_VECTOR, FLUID_PRESSURE
            type: MOMENT_TENSOR
            # what: data for the source mechanism
            # type: array of double
            # note: 1) use [M11, M22, M33, M12, M13, M23] for MOMENT_TENSOR;
            #              [F1, F2, F3] for FORCE_VECTOR;
            #              [P] for FLUID_PRESSURE,
            #          where 123 stands for RTZ (vertical, radial, transpose)
            #       2) if location is given by "latitude_longitude",
            #          the RT-axes are determined w.r.t. this source; e.g.,
            #          the moment tensor of an earthquake follows the same
            #          order as in the CMTSOLUTION format (globalcmt.org)
            #       3) if location is given by "distance_azimuth",
            #          the RT-axes are determined w.r.t. the mesh axis
            data: [4.71e24, 3.81e22, -4.74e24, 3.99e23, -8.05e23, -1.23e24]
            # what: unit of data
            # type: double
            # note: use 1e-7 to convert dyn*cm (in CMTSOLUTION) to N*m
            unit: 1e-7
        # source time function
        source_time_function:
            # what: class name
            # type: string
            # only: GaussianSTF / StreamSTF / NetCDF_STF
            class_name: GaussianSTF

            ############### parameters for GaussianSTF ###############
            # what: half duraction
            # type: double
            # note: use 0 for a Dirac-δ to compute the Green's functions
            half_duraction: 100.
            # what: decay factor
            # type: double
            # note: 1) it further controls the shape of the bell
            #       2) SPECFEM3D_GLOBE uses 1.628 and AxiSEM 3.5
            decay_factor: 1.628
            # what: time shift
            # type: double
            # note: 1) the axis of the bell will be aligned at the time
            #          origin if time_shift is given by zero
            #       2) a positive time shift moves the bell to the right
            time_shift: 0.
            # what: use time derivative or integral of Gaussian
            # type: string
            # only: ERF / GAUSSIAN / FIRST_DERIVATIVE / RICKER
            # note: 1) ERF: error function, integral of Gaussian
            #       2) GAUSSIAN: Gaussian
            #       3) FIRST_DERIVATIVE: first derivative of Gaussian
            #       4) RICKER: second derivative of Gaussian
            use_derivative_integral: ERF
